williamson_s_adj <- williamson_mstl[,2] + williamson_mstl[,6]
williamson_seasonal_weekly <- williamson_mstl[,3]
williamson_seasonal_monthly <- williamson_mstl[,4]
williamson_seasonal_yearly <- williamson_mstl[,5]
williamson_arimax <- auto.arima(williamson_s_adj, xreg = window(dem_ts_daily,start = c(2016, 1), end = c(2021, 12)))
forecast_williamson_s_adj <- forecast(williamson_arimax, xreg = dem_ts_daily, h = 730.5)
forecast_williamson <- forecast_williamson_s_adj$mean + snaive(williamson_seasonal_yearly, h = 730.5)$mean
forecast_williamson <- pmax(ts(forecast_williamson, start = c(2022, 1), frequency = 365.25), 0)
forecast_williamson
MAE(forecast_williamson, williamson_test_daily)
williamson_full <- (mstl(msts(williamson_ts_daily, seasonal.periods = c(7,12,365.25))))
williamson_full_s_adj <- williamson_full[,2] + williamson_full[,6]
williamson_seasonal_yearly_full <- williamson_full[,5]
williamson_arimax_full <- auto.arima(williamson_full_s_adj, xreg = dem_ts_daily)
forecast_williamson_s_adj_full <- forecast(williamson_arimax_full, xreg = dem_ts_daily, h = 730.5)
forecast_williamson_full <- forecast_williamson_s_adj_full$mean + snaive(williamson_seasonal_yearly_full, h = 730.5)$mean
forecast_williamson_full <- pmax(ts(forecast_williamson_full, start = c(2022, 1), frequency = 365.25), 0)
autoplot(forecast_williamson_full)
forecast_williamson_full <- pmax(ts(forecast_williamson_full, start = c(2024, 1), frequency = 365.25), 0)
autoplot(forecast_williamson_full)
forecast_williamson_s_adj_full <- forecast(williamson_arimax_full, xreg = dem_ts_daily, h = 365.5)
forecast_williamson_full <- forecast_williamson_s_adj_full$mean + snaive(williamson_seasonal_yearly_full, h = 730.5)$mean
forecast_williamson_full <- pmax(ts(forecast_williamson_full, start = c(2024, 1), frequency = 365.25), 0)
autoplot(forecast_williamson_full)
forecast_williamson_s_adj_full <- forecast(williamson_arimax_full, xreg = dem_ts_daily, h = 365.55)
forecast_williamson_full <- forecast_williamson_s_adj_full$mean + snaive(williamson_seasonal_yearly_full, h = 365.25)$mean
forecast_williamson_full <- pmax(ts(forecast_williamson_full, start = c(2024, 1), frequency = 365.25), 0)
autoplot(forecast_williamson_full)
# Daily data for Palmer
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
palmer_ts_daily <- ts(data = palmer_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
palmer_train_daily <- window(palmer_ts_daily, start = c(2016, 1), end = c(2021, 12))
palmer_test_daily <- window(palmer_ts_daily, start = c(2022, 1))
palmer_msts <- msts(palmer_train_daily, seasonal.periods = c(7,12,365.25))
palmer_mstl <- (mstl(msts(palmer_train_daily, seasonal.periods = c(7,12,365.25))))
#splitting into seasonal and seasonally adjusted
palmer_s_adj <- palmer_mstl[,2] + palmer_mstl[,6]
palmer_seasonal_weekly <- palmer_mstl[,3]
palmer_seasonal_monthly <- palmer_mstl[,4]
palmer_seasonal_yearly <- palmer_mstl[,5]
palmer_arimax <- auto.arima(palmer_s_adj, xreg = window(dem_ts_daily,start = c(2016, 1), end = c(2021, 12)))
forecast_palmer_s_adj <- forecast(palmer_arimax, xreg = dem_ts_daily, h = 730.5)
forecast_palmer <- forecast_palmer_s_adj$mean + snaive(palmer_seasonal_yearly, h = 730.5)$mean
forecast_palmer <- pmax(ts(forecast_palmer, start = c(2022, 1), frequency = 365.25), 0)
forecast_palmer
MAE(forecast_palmer, palmer_test_daily)
palmer_full <- (mstl(msts(palmer_ts_daily, seasonal.periods = c(7,12,365.25))))
palmer_full_s_adj <- palmer_full[,2] + palmer_full[,6]
palmer_seasonal_yearly_full <- palmer_full[,5]
palmer_arimax_full <- auto.arima(palmer_full_s_adj, xreg = dem_ts_daily)
palmer_full_s_adj
dem_ts_daily
# Daily data for Palmer
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
palmer_ts_daily <- ts(data = palmer_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
palmer_train_daily <- window(palmer_ts_daily, start = c(2016, 1), end = c(2021, 12))
palmer_test_daily <- window(palmer_ts_daily, start = c(2022, 1))
palmer_msts <- msts(palmer_train_daily, seasonal.periods = c(7,12,365.25))
palmer_mstl <- (mstl(msts(palmer_train_daily, seasonal.periods = c(7,12,365.25))))
#splitting into seasonal and seasonally adjusted
palmer_s_adj <- palmer_mstl[,2] + palmer_mstl[,6]
palmer_seasonal_weekly <- palmer_mstl[,3]
palmer_seasonal_monthly <- palmer_mstl[,4]
palmer_seasonal_yearly <- palmer_mstl[,5]
palmer_arimax <- auto.arima(palmer_s_adj, xreg = window(dem_ts_daily,start = c(2016, 1), end = c(2021, 12)))
forecast_palmer_s_adj <- forecast(palmer_arimax, xreg = dem_ts_daily, h = 730.5)
forecast_palmer <- forecast_palmer_s_adj$mean + snaive(palmer_seasonal_yearly, h = 730.5)$mean
forecast_palmer <- pmax(ts(forecast_palmer, start = c(2022, 1), frequency = 365.25), 0)
forecast_palmer
MAE(forecast_palmer, palmer_test_daily)
palmer_full <- (mstl(msts(palmer_ts_daily, seasonal.periods = c(7,12,365.25))))
palmer_full_s_adj <- palmer_full[,2] + palmer_full[,6]
palmer_seasonal_yearly_full <- palmer_full[,5]
palmer_arimax_full <- auto.arima(palmer_full_s_adj, xreg = dem_ts_daily)
# Daily data for Williamson
williamson_pageviews_daily <- article_pageviews(
article = "Marianne_Williamson",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
williamson_ts_daily <- ts(data = williamson_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
williamson_train_daily <- window(williamson_ts_daily, start = c(2016, 1), end = c(2021, 12))
williamson_test_daily <- window(williamson_ts_daily, start = c(2022, 1))
williamson_msts <- msts(williamson_train_daily, seasonal.periods = c(7,12,365.25))
williamson_mstl <- (mstl(msts(williamson_train_daily, seasonal.periods = c(7,12,365.25))))
#splitting into seasonal and seasonally adjusted
williamson_s_adj <- williamson_mstl[,2] + williamson_mstl[,6]
williamson_seasonal_weekly <- williamson_mstl[,3]
williamson_seasonal_monthly <- williamson_mstl[,4]
williamson_seasonal_yearly <- williamson_mstl[,5]
williamson_arimax <- auto.arima(williamson_s_adj, xreg = window(dem_ts_daily,start = c(2016, 1), end = c(2021, 12)))
forecast_williamson_s_adj <- forecast(williamson_arimax, xreg = dem_ts_daily, h = 730.5)
forecast_williamson <- forecast_williamson_s_adj$mean + snaive(williamson_seasonal_yearly, h = 730.5)$mean
forecast_williamson <- pmax(ts(forecast_williamson, start = c(2022, 1), frequency = 365.25), 0)
forecast_williamson
MAE(forecast_williamson, williamson_test_daily)
williamson_full <- (mstl(msts(williamson_ts_daily, seasonal.periods = c(7,12,365.25))))
williamson_full_s_adj <- williamson_full[,2] + williamson_full[,6]
williamson_seasonal_yearly_full <- williamson_full[,5]
williamson_arimax_full <- auto.arima(williamson_full_s_adj, xreg = dem_ts_daily)
forecast_williamson_s_adj_full <- forecast(williamson_arimax_full, xreg = dem_ts_daily, h = 365.25)
forecast_williamson_full <- forecast_williamson_s_adj_full$mean + snaive(williamson_seasonal_yearly_full, h = 365.25)$mean
forecast_williamson_full <- pmax(ts(forecast_williamson_full, start = c(2024, 1), frequency = 365.25), 0)
autoplot(forecast_williamson_full)
# Daily data for Palmer
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
palmer_ts_daily <- ts(data = palmer_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
palmer_train_daily <- window(palmer_ts_daily, start = c(2016, 1), end = c(2021, 12))
palmer_test_daily <- window(palmer_ts_daily, start = c(2022, 1))
palmer_msts <- msts(palmer_train_daily, seasonal.periods = c(7,12,365.25))
palmer_mstl <- (mstl(msts(palmer_train_daily, seasonal.periods = c(7,12,365.25))))
#splitting into seasonal and seasonally adjusted
palmer_s_adj <- palmer_mstl[,2] + palmer_mstl[,6]
palmer_seasonal_weekly <- palmer_mstl[,3]
palmer_seasonal_monthly <- palmer_mstl[,4]
palmer_seasonal_yearly <- palmer_mstl[,5]
palmer_arimax <- auto.arima(palmer_s_adj, xreg = window(dem_ts_daily,start = c(2016, 1), end = c(2021, 12)))
forecast_palmer_s_adj <- forecast(palmer_arimax, xreg = dem_ts_daily, h = 730.5)
forecast_palmer <- forecast_palmer_s_adj$mean + snaive(palmer_seasonal_yearly, h = 730.5)$mean
forecast_palmer <- pmax(ts(forecast_palmer, start = c(2022, 1), frequency = 365.25), 0)
forecast_palmer
MAE(forecast_palmer, palmer_test_daily)
palmer_full <- (mstl(msts(palmer_ts_daily, seasonal.periods = c(7,12,365.25))))
palmer_full_s_adj <- palmer_full[,2] + palmer_full[,6]
palmer_seasonal_yearly_full <- palmer_full[,5]
palmer_arimax_full <- auto.arima(palmer_full_s_adj, xreg = dem_ts_daily)
palmer_arimax_full; dem_ts_daily
palmer_arimax_full <- auto.arima(palmer_full_s_adj, xreg = dem_ts_daily)
palmer_full_s_adj; dem_ts_daily
palmer_full_s_adj
dem_ts_daily
palmer_full
palmer_ts_daily <- ts(data = palmer_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
palmer_ts_daily
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
palmer_ts_daily <- ts(data = palmer_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
palmer_ts_daily
autoplot(palmer_ts_daily)
autoplot(palmer_te)
autoplot(palmer_test_daily)
# Daily data for Palmer
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer_(politician)",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer_(politician)",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
# Daily data for Palmer
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer_(politician)",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
# Daily data for Joe Biden
biden_pageviews_daily <- article_pageviews(
article = "Joe_Biden",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
biden_ts_daily <- ts(data = biden_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
biden_train_daily <- window(biden_ts_daily, start = c(2016, 1), end = c(2021, 12))
biden_test_daily <- window(biden_ts_daily, start = c(2022, 1))
biden_msts <- msts(biden_train_daily, seasonal.periods = c(7,12,365.25))
biden_mstl <- (mstl(msts(biden_train_daily, seasonal.periods = c(7,12,365.25))))
#splitting into seasonal and seasonally adjusted
biden_s_adj <- biden_mstl[,2] + biden_mstl[,6]
biden_seasonal_weekly <- biden_mstl[,3]
biden_seasonal_monthly <- biden_mstl[,4]
biden_seasonal_yearly <- biden_mstl[,5]
biden_arimax <- auto.arima(biden_s_adj, xreg = window(dem_ts_daily,start = c(2016, 1), end = c(2021, 12)))
forecast_biden_s_adj <- forecast(biden_arimax, xreg = dem_ts_daily, h = 730.5)
forecast_biden <- forecast_biden_s_adj$mean + snaive(biden_seasonal_yearly, h = 730.5)$mean
forecast_biden <- pmax(ts(forecast_biden, start = c(2022, 1), frequency = 365.25), 0)
forecast_biden
MAE(forecast_biden, biden_test_daily)
biden_full <- (mstl(msts(biden_ts_daily, seasonal.periods = c(7,12,365.25))))
biden_full_s_adj <- biden_full[,2] + biden_full[,6]
biden_seasonal_yearly_full <- biden_full[,5]
biden_arimax_full <- auto.arima(biden_full_s_adj, xreg = dem_ts_daily)
forecast_biden_s_adj_full <- forecast(biden_arimax_full, xreg = dem_ts_daily, h = 365.25)
forecast_biden_full <- forecast_biden_s_adj_full$mean + snaive(biden_seasonal_yearly_full, h = 365.25)$mean
forecast_biden_full <- pmax(ts(forecast_biden_full, start = c(2024, 1), frequency = 365.25), 0)
autoplot(forecast_biden_full)
autoplot(palmer_ts_daily)
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer_(politician)",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
# Daily data for Palmer
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer_(politician)",
granularity = "daily",
)
palmer_pageviews_daily <- article_pageviews(
article = "Jason_Palmer_(politician)",
granularity = "daily",
start = "2024010100",
end = "2024123100"
)
palmer_ts_daily <- ts(data = palmer_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
autoplot(palmer_ts_daily)
palmer_ts_daily <- ts(data = palmer_pageviews_daily$views, start = c(2024,1), frequency = 365.25)
autoplot(palmer_ts_daily)
palmer_ts_daily
# Daily data for Republican Party
rep_pageviews_daily <- article_pageviews(
article = "Republican_Party_(United_States)",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
rep_ts_daily <- ts(data = rep_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
# Daily data for Donald Trump
trump_pageviews_daily <- article_pageviews(
article = "Donald_Trump",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
trump_ts_daily <- ts(data = trump_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
trump_train_daily <- window(trump_ts_daily, start = c(2016, 1), end = c(2021, 12))
trump_test_daily <- window(trump_ts_daily, start = c(2022, 1))
trump_msts <- msts(trump_train_daily, seasonal.periods = c(7,12,365.25))
trump_mstl <- (mstl(msts(trump_train_daily, seasonal.periods = c(7,12,365.25))))
#splitting into seasonal and seasonally adjusted
trump_s_adj <- trump_mstl[,2] + trump_mstl[,6]
trump_seasonal_weekly <- trump_mstl[,3]
trump_seasonal_monthly <- trump_mstl[,4]
trump_seasonal_yearly <- trump_mstl[,5]
trump_arimax <- auto.arima(trump_s_adj, xreg = window(rep_ts_daily,start = c(2016, 1), end = c(2021, 12)))
forecast_trump_s_adj <- forecast(trump_arimax, xreg = rep_ts_daily, h = 730.5)
forecast_trump <- forecast_trump_s_adj$mean + snaive(trump_seasonal_yearly, h = 730.5)$mean
forecast_trump <- pmax(ts(forecast_trump, start = c(2022, 1), frequency = 365.25), 0)
forecast_trump
MAE(forecast_trump, trump_test_daily)
trump_full <- (mstl(msts(trump_ts_daily, seasonal.periods = c(7,12,365.25))))
trump_full_s_adj <- trump_full[,2] + trump_full[,6]
trump_seasonal_yearly_full <- trump_full[,5]
trump_arimax_full <- auto.arima(trump_full_s_adj, xreg = rep_ts_daily)
forecast_trump_s_adj_full <- forecast(trump_arimax_full, xreg = rep_ts_daily, h = 365.25)
forecast_trump_full <- forecast_trump_s_adj_full$mean + snaive(trump_seasonal_yearly_full, h = 365.25)$mean
forecast_trump_full <- pmax(ts(forecast_trump_full, start = c(2024, 1), frequency = 365.25), 0)
autoplot(forecast_trump_full)
library(pageviews)
library(fpp2)
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(feasts)
# Monthly data
obama_pageviews_monthly <- article_pageviews(
article = "Barack_Obama",
granularity = "monthly",
start = "2016010100",
end = "2023123100"
)
## Average daily views per month
obama_ts <-ts(data = obama_pageviews_monthly$views, start = c(2016,1), frequency = 12)
obama_ts_DA <- obama_ts/monthdays(obama_ts)
obama_ts_DA
autoplot(obama_ts_DA) +
xlab("Years") + ylab("Views") +
ggtitle("Average views per day in a month")
# Daily data
obama_pageviews_daily <- article_pageviews(
article = "Barack_Obama",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
## Daily timeseries
obama_ts_daily <-ts(data = obama_pageviews_daily$views, start = c(2016,01), frequency = 365.25)
autoplot(obama_ts_daily) +
xlab("Years") + ylab("Views") +
ggtitle("Views in a day")
obama_pageviews_daily$date[which.max(obama_pageviews_daily$views)]
#train-test split
obama_train_month <- window(obama_ts_DA, start=c(2016, 1), end = c(2021, 12))
obama_test_month <- window(obama_ts_DA, start = c(2022, 1))
#train-test split daily
obama_train_daily <- window(obama_ts_daily, start = c(2016, 1), end = c(2021, 12))
obama_test_daily <- window(obama_ts_daily, start = c(2022, 1))
obama_month_fitted_n <- forecast(stlf(obama_train_month, method = "naive",lambda = "auto"), h =24)$mean
obama_month_fitted_d <- forecast(stlf(obama_train_month, method = "rwdrift",lambda = "auto"), h =24)$mean
obama_month_fitted_a <-forecast(stlf(obama_train_month, method = "arima",lambda = "auto"), h =24)$mean
# Accuracy computation
accuracy(obama_month_fitted_n, obama_test_month)[1,c("ME", "RMSE","MAE")]
accuracy(obama_month_fitted_d, obama_test_month)[1,c("ME", "RMSE","MAE")]
accuracy(obama_month_fitted_a, obama_test_month)[1,c("ME", "RMSE","MAE")]
# Negative ME from arima model suggests that it tends to underestimate the quantity being predicted but has the smallest RMSE.
obama_daily_fitted_n <- forecast(stlf(obama_train_daily, method = "naive",lambda = "auto"), h = 730)$mean
obama_daily_fitted_d <- forecast(stlf(obama_train_daily, method = "rwdrift",lambda = "auto"), h = 730)$mean
obama_daily_fitted_a <-forecast(stlf(obama_train_daily, method = "arima",lambda = "auto"), h = 730)$mean
# Accuracy computation
accuracy(obama_daily_fitted_n, obama_test_daily)[1,c("ME", "RMSE","MAE")]
accuracy(obama_daily_fitted_d, obama_test_daily)[1,c("ME", "RMSE","MAE")]
accuracy(obama_daily_fitted_a, obama_test_daily)[1,c("ME", "RMSE","MAE")]
autoplot(mstl(obama_train_daily))
obama_msts <- msts(obama_train_daily, seasonal.periods = c(7,12,365.25))
autoplot(obama_msts)
obama_mstl <- (mstl(msts(obama_train_daily, seasonal.periods = c(7,12,365.25))))
obama_mstl
autoplot(obama_mstl)
#splitting into seasonal and seasonally adjusted
obama_s_adj <- obama_mstl[,2] + obama_mstl[,6]
autoplot(obama_s_adj)
obama_seasonal_weekly <- obama_mstl[,3]
obama_seasonal_monthly <- obama_mstl[,4]
obama_seasonal_yearly <- obama_mstl[,5]
snaive(obama_seasonal_yearly, h = 730.5)
accuracy(obama_daily_fitted_n, obama_test_daily)[1,c("ME", "RMSE","MAE")]
accuracy(obama_daily_fitted_d, obama_test_daily)[1,c("ME", "RMSE","MAE")]
accuracy(obama_daily_fitted_a, obama_test_daily)[1,c("ME", "RMSE","MAE")]
auto.arima(obama_s_adj)
obama_daily_fitted_n <- forecast(stlf(obama_train_daily, method = "naive",lambda = "auto"), h = 730.5)$mean
snaive(obama_seasonal_yearly, h = 730.5)
forecast_weekly <- forecast(obama_seasonal_weekly, h = 730.5)
forecast_weekly
autoplot(forecast_weekly )
forecast_weekly <- snaive(obama_seasonal_weekly, h = 730.5)
forecast_monthly <- snaive(obama_seasonal_monthly, h = 730.5)
forecast_yearly <- snaive(obama_seasonal_yearly, h = 730.5)
autoplot(forecast_weekly)
obama_seasonal_weekly
autoplot(obama_msts)
autoplot(mstl(obama_train_daily))
autoplot(obama_msts)
install.packages("tsbillle")
install.packages("tsbille")
install.packages("tsibble")
install.packages("tsibble")
library(tsibble)
obama_train_daily_tsibble <- obama_train_daily %>%
as_tsibble(index = date)
obama_train_daily_tsibble
obama_msts <- msts(obama_train_daily, seasonal.periods = c(7,12,365.25), start = c(2016,01))
library(pageviews)
library(fpp2)
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(feasts)
library(tsibble)
# Monthly data
obama_pageviews_monthly <- article_pageviews(
article = "Barack_Obama",
granularity = "monthly",
start = "2016010100",
end = "2023123100"
)
## Average daily views per month
obama_ts <-ts(data = obama_pageviews_monthly$views, start = c(2016,1), frequency = 12)
obama_ts_DA <- obama_ts/monthdays(obama_ts)
obama_ts_DA
autoplot(obama_ts_DA) +
xlab("Years") + ylab("Views") +
ggtitle("Average views per day in a month")
# Daily data
obama_pageviews_daily <- article_pageviews(
article = "Barack_Obama",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
## Daily timeseries
obama_ts_daily <-ts(data = obama_pageviews_daily$views, start = c(2016,01), frequency = 365.25)
autoplot(obama_ts_daily) +
xlab("Years") + ylab("Views") +
ggtitle("Views in a day")
obama_pageviews_daily$date[which.max(obama_pageviews_daily$views)]
#train-test split
obama_train_month <- window(obama_ts_DA, start=c(2016, 1), end = c(2021, 12))
obama_test_month <- window(obama_ts_DA, start = c(2022, 1))
#train-test split daily
obama_train_daily <- window(obama_ts_daily, start = c(2016, 1), end = c(2021, 12))
obama_test_daily <- window(obama_ts_daily, start = c(2022, 1))
autoplot(mstl(obama_train_daily))
obama_msts <- msts(obama_train_daily, seasonal.periods = c(7,12,365.25), start = c(2016,01))
autoplot(obama_msts)
obama_train_daily_tsibble <- obama_train_daily %>%
as_tsibble(index = date)
obama_mstl <- (mstl(msts(obama_train_daily, seasonal.periods = c(7,12,365.25))))
obama_mstl
autoplot(obama_mstl)
#splitting into seasonal and seasonally adjusted
obama_s_adj <- obama_mstl[,2] + obama_mstl[,6]
autoplot(obama_s_adj)
obama_seasonal_weekly <- obama_mstl[,3]
obama_seasonal_monthly <- obama_mstl[,4]
obama_seasonal_yearly <- obama_mstl[,5]
forecast_weekly <- snaive(obama_seasonal_weekly, h = 730.5)
forecast_monthly <- snaive(obama_seasonal_monthly, h = 730.5)
forecast_yearly <- snaive(obama_seasonal_yearly, h = 730.5)
obama_arima <- auto.arima(obama_s_adj)
obama_msts <- msts(obama_train_daily, seasonal.periods = c(7,12,365.25), start = c(2016,01))
autoplot(obama_msts)
obama_mstl <- (mstl(msts(obama_train_daily, seasonal.periods = c(7,12,365.25))))
autoplot(obama_mstl)
autoplot(mstl(obama_train_daily))
obama_msts <- msts(obama_train_daily, seasonal.periods = c(7,12,365.25), start = c(2016,01))
autoplot(obama_msts)
obama_train_daily_tsibble <- obama_train_daily %>%
as_tsibble(index = date)
obama_mstl <- (mstl(obama_msts)
obama_mstl
obama_mstl <- mstl(obama_msts)
obama_mstl
autoplot(obama_mstl)
obama_s_adj <- obama_mstl[,2] + obama_mstl[,6]
autoplot(obama_s_adj)
forecast_weekly <- snaive(obama_seasonal_weekly, h = 730.5)
library(pageviews)
library(fpp2)
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(feasts)
library(tsibble)
# Monthly data
obama_pageviews_monthly <- article_pageviews(
article = "Barack_Obama",
granularity = "monthly",
start = "2016010100",
end = "2023123100"
)
## Average daily views per month
obama_ts <-ts(data = obama_pageviews_monthly$views, start = c(2016,1), frequency = 12)
obama_ts_DA <- obama_ts/monthdays(obama_ts)
obama_ts_DA
autoplot(obama_ts_DA) +
xlab("Years") + ylab("Views") +
ggtitle("Average views per day in a month")
# Daily data
obama_pageviews_daily <- article_pageviews(
article = "Barack_Obama",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
## Daily timeseries
obama_ts_daily <-ts(data = obama_pageviews_daily$views, start = c(2016,01), frequency = 365.25)
autoplot(obama_ts_daily) +
xlab("Years") + ylab("Views") +
ggtitle("Views in a day")
obama_pageviews_daily$date[which.max(obama_pageviews_daily$views)]
#train-test split
obama_train_month <- window(obama_ts_DA, start=c(2016, 1), end = c(2021, 12))
obama_test_month <- window(obama_ts_DA, start = c(2022, 1))
#train-test split daily
obama_train_daily <- window(obama_ts_daily, start = c(2016, 1), end = c(2021, 12))
obama_test_daily <- window(obama_ts_daily, start = c(2022, 1))
autoplot(mstl(obama_train_daily))
obama_msts <- msts(obama_train_daily, seasonal.periods = c(7,12,365.25), start = c(2016,01))
autoplot(obama_msts)
obama_mstl <- mstl(obama_msts)
obama_mstl
autoplot(obama_mstl)
#splitting into seasonal and seasonally adjusted
obama_s_adj <- obama_mstl[,2] + obama_mstl[,6]
autoplot(obama_s_adj)
obama_seasonal_weekly <- obama_mstl[,3]
obama_seasonal_monthly <- obama_mstl[,4]
obama_seasonal_yearly <- obama_mstl[,5]
forecast_weekly <- snaive(obama_seasonal_weekly, h = 730.5)
forecast_monthly <- snaive(obama_seasonal_monthly, h = 730.5)
forecast_yearly <- snaive(obama_seasonal_yearly, h = 730.5)
obama_arima <- auto.arima(obama_s_adj)
autoplot(forecast_weekly)
forecast_monthly
autoplot(forecast_weekly) +
autolayer(forecast_monthly)
autoplot(forecast_weekly) +
autolayer(forecast_monthly, series = "monthly")
autoplot(obama_train_daily) +
autolayer(forecast_weekly, series = "weekly") +
autolayer(forecast_monthly, series = "monthly") +
autolayer(forecast_yearly, series = "yearly")
obama_test_daily
