decompose(obama_train_month)
#train-test split
obama_train_month <- window(obama_ts_DA, start=c(2016, 1), end = c(2022, 0))
library(pageviews)
library(fpp2)
library(dplyr)
library(lubridate)
library(ggplot2)
library(forecast)
library(feasts)
library(tsibble)
# Monthly data
obama_pageviews_monthly <- article_pageviews(
article = "Barack_Obama",
granularity = "monthly",
start = "2016010100",
end = "2023123100"
)
# Monthly data
obama_pageviews_monthly <- article_pageviews(
article = "Barack_Obama",
granularity = "monthly",
start = "2016010100",
end = "2023123100"
)
## Average daily views per month
obama_ts <-ts(data = obama_pageviews_monthly$views, start = c(2016,1), frequency = 12)
obama_ts_DA <- obama_ts/monthdays(obama_ts)
obama_ts_DA
autoplot(obama_ts_DA) +
xlab("Years") + ylab("Views") +
ggtitle("Obama Average Daily Views per Month")
# Daily data
obama_pageviews_daily <- article_pageviews(
article = "Barack_Obama",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
## Daily timeseries
obama_ts_daily <-ts(data = obama_pageviews_daily$views, start = c(2016,01), frequency = 365.25)
autoplot(obama_ts_daily) +
xlab("Years") + ylab("Views") +
ggtitle("Obama Daily Views")
obama_pageviews_daily$date[which.max(obama_pageviews_daily$views)]
#train-test split
obama_train_month <- window(obama_ts_DA, start=c(2016, 1), end = c(2022, 0))
obama_train_month
obama_test_month <- window(obama_ts_DA, start = c(2022, 1))
#train-test split daily
obama_train_daily <- window(obama_ts_daily, start = c(2016, 1), end = c(2022, 0))
obama_test_daily <- window(obama_ts_daily, start = c(2022, 1))
decompose(obama_train_month)
decompose(obama_train_daily)
decompose(obama_train_month)
decompose(obama_train_daily)
autoplot(decompose(obama_train_month))
autoplot(decompose(obama_train_month))
autoplot(decompose(obama_train_daily))
autoplot(decompose(obama_train_month)) + ggtitle("Decomposition of Average Daily Views per Month")
autoplot(decompose(obama_train_daily)) + ggtitle("Decomposition of Daily Views")
autoplot(obama_train_month) +
autolayer(forecast(stlf(obama_train_month, method = "naive",lambda = "auto"), h =24), series = "Naive", PI = FALSE) +
autolayer(forecast(stlf(obama_train_month, method = "rwdrift",lambda = "auto"), h =24), series = "Drift", PI = FALSE) +
autolayer(forecast(stlf(obama_train_month, method = "arima",lambda = "auto"), h =24), series = "ARIMA", PI = FALSE) +
ggtitle("STL Decomposition with Forecasts for Average Daily Views per Month")
autoplot(obama_train_daily) +
autolayer(forecast(stlf(obama_train_daily, method = "naive",lambda = "auto"), h = 730), series = "Naive", PI = FALSE) +
autolayer(forecast(stlf(obama_train_daily, method = "rwdrift",lambda = "auto"), h = 730), series = "Drift", PI = FALSE) +
autolayer(forecast(stlf(obama_train_daily, method = "arima",lambda = "auto"), h = 730), series = "ARIMA", PI = FALSE) +
ggtitle("STL Decomposition with Forecasts for Daily Views")
obama_month_fitted_n <- forecast(stlf(obama_train_month, method = "naive",lambda = "auto"), h =24)$mean
obama_month_fitted_d <- forecast(stlf(obama_train_month, method = "rwdrift",lambda = "auto"), h =24)$mean
obama_month_fitted_a <-forecast(stlf(obama_train_month, method = "arima",lambda = "auto"), h =24)$mean
# Accuracy computation
accuracy(obama_month_fitted_n, obama_test_month)[1,c("ME", "RMSE","MAE","MAPE")]
accuracy(obama_month_fitted_d, obama_test_month)[1,c("ME", "RMSE","MAE","MAPE")]
accuracy(obama_month_fitted_a, obama_test_month)[1,c("ME", "RMSE","MAE","MAPE")]
# Negative ME from ARIMA model suggests that it tends to underestimate the quantity being predicted. However naive seems to give the lowest MAPE of 23.164.
obama_daily_fitted_n <- forecast(stlf(obama_train_daily, method = "naive",lambda = "auto"), h = 730)$mean
obama_daily_fitted_d <- forecast(stlf(obama_train_daily, method = "rwdrift",lambda = "auto"), h = 730)$mean
obama_daily_fitted_a <-forecast(stlf(obama_train_daily, method = "arima",lambda = "auto"), h = 730)$mean
# Accuracy computation
accuracy(obama_daily_fitted_n, obama_test_daily)[1,c("ME", "RMSE","MAE","MAPE")]
accuracy(obama_daily_fitted_d, obama_test_daily)[1,c("ME", "RMSE","MAE","MAPE")]
accuracy(obama_daily_fitted_a, obama_test_daily)[1,c("ME", "RMSE","MAE","MAPE")]
# Positive ME from ARIMA model suggests that it tends to overestimate the quantity being predicted, RWF has the smallest MAPE of 24.658
# The daily time series has too many data points, hence too long to compute training set fits and residuals. Moving forward only monthly daily average will be computed.
obama_month_fitted_s <- splinef(obama_train_month, h = 24,lambda = "auto")$mean
obama_month_fitted_ns <- obama_month_fitted_n +obama_month_fitted_s
obama_month_fitted_as <- obama_month_fitted_a +obama_month_fitted_s
obama_month_fitted_ds <-obama_month_fitted_d +obama_month_fitted_s
autoplot(obama_test_month) +
autolayer(obama_month_fitted_s) +
autolayer(obama_month_fitted_ns) +
autolayer(obama_month_fitted_as) +
autolayer(obama_month_fitted_ds) +
autolayer(obama_month_fitted_a)
accuracy(obama_month_fitted_s, obama_test_month)[1,c("ME", "RMSE","MAE","MAPE")]
accuracy(obama_month_fitted_ns, obama_test_month)[1,c("ME", "RMSE","MAE","MAPE")]
accuracy(obama_month_fitted_as, obama_test_month)[1,c("ME", "RMSE","MAE","MAPE")]
accuracy(obama_month_fitted_ds, obama_test_month)[1,c("ME", "RMSE","MAE","MAPE")]
#Lowest MAPE is surprisingly naive + spline with 31.46659 though when eyeballing the ARIMA + spline looks closer to the data.
# Hence for prediction of pageviews on a daily average, a standard ARIMA model seems to perform better.
autoplot(mstl(obama_train_daily))
obama_msts <- msts(obama_train_daily, seasonal.periods = c(7,12,365.25), start = c(2016,1))
autoplot(obama_msts)
obama_mstl <- mstl(obama_msts)
obama_mstl
autoplot(obama_mstl)
#splitting into seasonal and seasonally adjusted
obama_s_adj <- obama_mstl[,2] + obama_mstl[,6]
autoplot(obama_s_adj)
obama_seasonal_weekly <- obama_mstl[,3]
obama_seasonal_monthly <- obama_mstl[,4]
obama_seasonal_yearly <- obama_mstl[,5]
forecast_weekly <- ts(snaive(obama_seasonal_weekly, h = 730.5)$mean, start=c(2022, 1), frequency = 365.25)
forecast_monthly <- ts(snaive(obama_seasonal_monthly, h = 730.5)$mean, start=c(2022, 1), frequency = 365.25)
forecast_yearly <- ts(snaive(obama_seasonal_yearly, h = 730.5)$mean, start=c(2022, 1), frequency = 365.25)
obama_arima <- auto.arima(obama_s_adj)
forecast_s_adj <- ts((forecast(obama_arima, h = 730.5))$mean, start=c(2022, 1), frequency = 365.25)
autoplot(obama_train_daily) +
autolayer(forecast_weekly, series = "weekly") +
autolayer(forecast_monthly, series = "monthly") +
autolayer(forecast_yearly, series = "yearly") +
autolayer(forecast_s_adj, series = "Seasonal adj")
obama_mstl_fitted <- forecast_weekly + forecast_monthly + forecast_yearly + forecast_s_adj
autoplot(obama_mstl_fitted) +
autolayer(obama_test_daily)
accuracy(obama_mstl_fitted,obama_test_daily)[1,c("ME", "RMSE","MAE","MAPE")]
#MAPE of 170.0686
autoplot(obama_seasonal_monthly)
autoplot(obama_seasonal_weekly)
autoplot(obama_seasonal_yearly)
obama_arima <- auto.arima(obama_s_adj)
obama_s_adj_arima_fc <- (forecast(obama_arima, h = 730.5))
plot(obama_s_adj_arima_fc)
obama_arima_fc <- obama_s_adj_arima_fc$mean + snaive(obama_seasonal_yearly, h = 730.5)$mean
obama_arima_fc <- ts(obama_arima_fc, start = c(2022, 1), frequency = 365.25)
autoplot(obama_arima_fc) + autolayer(obama_test_daily)
accuracy(obama_arima_fc, obama_test_daily)
# Daily data for Democratic Party pageviews
dem_pageviews_daily <- article_pageviews(
article = "Democratic_Party_(United_States)",
granularity = "daily",
start = "2016010100",
end = "2023123100"
)
obama_s_adj
dem_ts_daily <- ts(data = dem_pageviews_daily$views, start = c(2016,1), frequency = 365.25)
obama_arimax <- auto.arima(obama_s_adj, xreg = window(dem_ts_daily,start = c(2016, 1), end = c(2022, 0)))
forecast_obama_s_adj <- forecast(obama_arimax, xreg = dem_ts_daily, h = 730.5)
forecast_obama <- forecast_obama_s_adj$mean + snaive(obama_seasonal_yearly, h = 730.5)$mean
forecast_obama <- pmax(ts(forecast_obama, start = c(2022, 1), frequency = 365.25), 0)
autoplot(obama_test_daily) + autolayer(forecast_obama)
forecast_obama
accuracy(forecast_obama, obama_test_daily)
autoplot(obama_test_daily) + autolayer(forecast_obama)
forecast_obama
accuracy(forecast_obama, obama_test_daily)
autoplot(obama_test_daily) + autolayer(forecast_obama)
autoplot(obama_test_daily) + autolayer(forecast_obama) + autolayer(obama_arima_fc)
